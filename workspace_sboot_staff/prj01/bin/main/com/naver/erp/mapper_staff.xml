<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.naver.erp.StaffDAO">

	<sql id="staffWhere">
    <if test="name!=null and name.length()>0">
   		and 
   		(upper(staff_name) like upper('%${name}%') )
    	</if>
    	<if test="gender!=null and gender.size()>0">
    	and
   		<foreach collection="gender" item="gender" open="(" separator=" or " close=")">
   				case when substr(s.jumin_no,7,1) in(2,4) then '여'
						    	else '남' end = #{gender}
    		</foreach>
    	</if>
    	<if test="min_year!=null and min_year.length()>0 and min_month!=null and min_month.length()>0 
    				and max_year!=null and max_year.length()>0 and max_month!=null and max_month.length()>0">
    		and (
    			to_date(s.graduate_day,'YYYYMMDD') between to_date(#{min_year}||#{min_month},'YYYYMM')
    						and to_date(#{max_year}||#{max_month},'YYYYMM')
    		)			
    	</if>
    	<if test="religion!=null and religion>0">
   		and 
   		s.religion_code=#{religion}
    	</if>
    	<if test="school!=null and school.size()>0">
    	and
   		<foreach collection="school" item="school" open="(" separator=" or " close=")">
   				s.school_code = #{school}
    		</foreach>
    	</if>
    	<if test="skill!=null and skill.size()>0">
    	and
   		<foreach collection="skill" item="skill" open="(" separator=" or " close=")">
   				skl.skill_code = #{skill}
    		</foreach>
    	</if>
	</sql>
	

	<select id="getStaffListAllCnt" parameterType="com.naver.erp.StaffSearchDTO" resultType="int">
		select count(distinct s.staff_no) 
		from staff s, code_religion cr, code_school cs, staff_skill skl, code_skill csl
		where 1=1
		and s.religion_code = cr.religion_code
		and s.school_code = cs.school_code
		and s.staff_no = skl.staff_no
		and skl.skill_code = csl.skill_code
	  <include refid="staffWhere"/> 	
	</select>
	
	<select id="getReligionList" resultType="com.naver.erp.StaffDTO">
		select 
			religion_code
			, religion_name
		from code_religion
	</select>
	
	<select id="getSchoolList" resultType="com.naver.erp.StaffDTO">
	 	select 
			school_code
			, school_name
		from code_school
	</select>
	
	<select id="getSkillList" resultType="com.naver.erp.StaffDTO">
		select
			skill_code
			, skill_name
		from code_skill
	</select>
	
	<select id="getXxxSkillList"  parameterType="int" resultType="com.naver.erp.StaffDTO">
		select 
		    skill_code "skill_code"
		    , skill_name "skill_name"
		from code_skill
		where skill_code not in(select skill_code from staff_skill where staff_no=#{staff_no})
	</select>
	
	<insert id="insertStaff" parameterType="com.naver.erp.StaffDTO">
	
		insert into staff(
    staff_no
    , staff_name
    , jumin_no
    , school_code
    , religion_code
    , graduate_day
    
     <if test="pic!=null and pic.length()>0">
			 , pic 
			 </if>
    
	)values(
	   (select nvl(max(staff_no),0)+1 from staff) 
	   , #{staff_name}
	   , #{jumin_no1}||#{jumin_no2}
	   , #{school_code}
	   , #{religion_code}
	   , #{graduate_day_ofYear}||#{graduate_day_ofMonth}||#{graduate_day_ofDate}
	   
	   <if test="pic!=null and pic.length()>0">
			 , #{pic}
			 </if>
	)
	</insert>
	
	<insert id="insertStaffSkill" parameterType="com.naver.erp.StaffDTO">
		insert into staff_skill(
			 staff_skill_no
	    , staff_no
	    , skill_code
		)
		select staff_skill_seq.nextval, staff_skill_no.* from (
		<foreach collection="skill_codeList" item="item" separator="union all">
			 <![CDATA[
			 select
			 		(select max(staff_no) from staff)
			 		, #{item}
			 from dual ]]>
		</foreach>
		)staff_skill_no
	</insert>
	
	<select id="getStaffList" parameterType="com.naver.erp.StaffSearchDTO" resultType="java.util.HashMap">
	select * 
		from (select rownum RNUM, zxcvb.*
		        from (
		        	select
		        	distinct s.staff_no								"staff_no"
							,s.staff_name 						 "staff_name"
						    , case when substr(s.jumin_no,7,1) in(2,4) then '여'
						    	else '남' end "gender"
						    , cr.religion_name                         "religion_name"
						    
						    , (select  LISTAGG(csl.skill_name, ', ') WITHIN GROUP (ORDER BY csl.skill_name)
                                from code_skill csl, staff_skill skl
                                where
                                skl.skill_code = csl.skill_code
                                and s.staff_no = skl.staff_no
                                and skl.staff_no=s.staff_no
                               ) "skill_name"
						    
						    , to_char(to_date(s.graduate_day,'YYYYMMDD'),'YYYY-MM-DD(DY)') "graduate_day"
			  
			   from staff s, code_religion cr, code_school cs, staff_skill skl, code_skill csl
					where 1=1
					and s.religion_code = cr.religion_code
					and s.school_code = cs.school_code
					and s.staff_no = skl.staff_no
					and skl.skill_code = csl.skill_code
					<include refid="staffWhere"/>
								
		        order by 
		        	<if test="sortHeadName==null or sortHeadName.length()==0 
		        				and sortAscDesc==null or sortAscDesc.length()==0">
		        		s.staff_no desc
		        	</if>
		        	<if test="sortHeadName!=null and sortHeadName.length()>0 
		        				and sortAscDesc!=null and sortAscDesc.length()>0">
		        		<choose>
		        		<when test="sortHeadName.equals('gender')">
		        				case when substr(s.jumin_no,7,1) in(2,4) then '여'
						    	else '남' end
		        				${sortAscDesc}
		        			</when>
		        			<when test="sortHeadName.equals('graduate_day')">
		        				to_char(to_date(s.graduate_day,'YYYYMMDD'),'YYYY-MM-DD(DY)')
		        				${sortAscDesc}
		        			</when>
		        				
		        			<otherwise>
		        				${sortHeadName}
		        				${sortAscDesc}
		        			</otherwise>
		        		</choose>
		        		</if>
		                )zxcvb
		        <!-- 부등호를 태그의 시작으로 인식하기 때문에 <![CDATA[비교문 입력]]>을 사용함 -->
		        <!-- CDATA: character data -->
			        <![CDATA[
			        where rownum <= ${selectPageNo * rowCntPerPage})
			    	where RNUM >= ${((selectPageNo-1)*rowCntPerPage)+1}
			        ]]>
		        <!--  
		        where rownum &lt;= 10)
				where  RNUM &gt;= 1
				-->
	</select>
	
	<select id="getStaffSkillList"  parameterType="com.naver.erp.StaffSearchDTO" resultType="com.naver.erp.StaffDTO">
		select  
			csl.skill_name "skill_name"
    from code_skill csl, staff_skill skl, staff s
    where
    	skl.skill_code = csl.skill_code
    	and s.staff_no = skl.staff_no
    	and skl.staff_no = #{staff_no}
	
	</select>
	
	
	
	<select id="getStaffDTO"  parameterType="int" resultType="com.naver.erp.StaffDTO">
			select 
				distinct s.staff_no "staff_no"
				, s.staff_name "staff_name"
				, substr(s.jumin_no,1,6) "jumin_no1"
				, substr(s.jumin_no,7,7) "jumin_no2"
				, s.religion_code "religion_code"
				, s.school_code "school_code"
				, substr(s.graduate_day,1,4) "graduate_day_ofYear"
				, substr(s.graduate_day,5,2) "graduate_day_ofMonth"
				, substr(s.graduate_day,7,2) "graduate_day_ofDate"
				, s.pic "pic"
				from staff s, code_religion cr, code_school cs, staff_skill skl, code_skill csl
									where 1=1
									and s.religion_code = cr.religion_code
									and s.school_code = cs.school_code
									and s.staff_no = skl.staff_no
									and skl.skill_code = csl.skill_code
									and s.staff_no = #{staff_no}
	
	</select>
	
	<select id="getStaffSkillDTO"  parameterType="int" resultType="com.naver.erp.StaffDTO">
	select 
		 staff_skill_no "staff_skill_no"
		 , staff_no "staff_no"
		 , skill_code "skill_code"
	from staff_skill
	where staff_no=#{staff_no}
	</select>
	 
	
	<select id="getStaffCnt" parameterType="com.naver.erp.StaffDTO" resultType="int">
		select count(*) from staff where staff_no=#{staff_no}
	</select>
	
	<select id="getPic" parameterType="com.naver.erp.StaffDTO" resultType="String">
		select pic from staff where staff_no=#{staff_no}
	</select>
	
	<update id="updateStaff" parameterType="com.naver.erp.StaffDTO" >
		update staff
		set staff_name = #{staff_name}
			,jumin_no = #{jumin_no1}||#{jumin_no2}
			,religion_code=#{religion_code}
			,school_code=#{school_code}
			,graduate_day = #{graduate_day_ofYear}||#{graduate_day_ofMonth}||#{graduate_day_ofDate}
			<if test="is_del!=null and is_del.length()>0">
			 	, pic = null
				</if>
				
				<if test="is_del==null or is_del.length()==0">
					<if test="pic!=null and pic.length()>0">
					 , pic = #{pic}
					</if>
				</if>
		where staff_no=#{staff_no}
	</update>
	
	<delete id="deleteStaff" parameterType="com.naver.erp.StaffDTO">
		delete from staff
		where staff_no=#{staff_no}
	</delete>
	<delete id="deleteSkill" parameterType="com.naver.erp.StaffDTO">
		delete from staff_skill
		where staff_no=#{staff_no}
	</delete>
	
	<insert id="updateStaffSkill" parameterType="com.naver.erp.StaffDTO">
		insert into staff_skill(
			 staff_skill_no
	    , staff_no
	    , skill_code
		)
		select staff_skill_seq.nextval, staff_skill_no.* from (
		<foreach collection="skill_codeList" item="item" separator="union all">
			 <![CDATA[
			 select
			 		#{staff_no}
			 		, #{item}
			 from dual ]]>
		</foreach>
		)staff_skill_no
	</insert>
</mapper>